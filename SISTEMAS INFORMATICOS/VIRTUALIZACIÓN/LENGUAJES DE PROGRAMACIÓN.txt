									 > LENGUAJES DE PROGRAMACIÓN:

									  - SEGÚN MODO DE EJECUCIÓN:

	- COMPILADOS -> A RAIZ DEL FICHERO CON CÓDIGO FUENTE SE GENERA CÓDIGO OBJETO(CÓDIGO BINARIO) A TRAVES DE UN TRADUCOR(COMPILADOR). 
		        LOS DIFERENTES FICHEROS CON CÓDIGO FUENTE GENERAN UN EJECUTABLE DESPUÉS DE SER COMPILADOS. LENGUAJES: C, C++, ¿C#, JAVA?, ENSAMBLADOR...
		        	* VENTAJAS: MÁS RÁPIDO
		        	* DESVENTAJAS: MENOS COMPATIBLES
 
	- INTERPRETADOS -> SOLO SE TIENE EL CÓDIGO FUENTE, NO HAY COMPILADOR, POR LO QUE EL CÓDIGO SE LE DA A UN INTÉRPRETE QUE VA EJECUTANDO EL CÓDIGO LÍNEA A LÍNEA.
		  	   LOS ERRORES OCURREN AL EJECUTAR. LENGUAJES: PSEINT, JAVASCRIPT, PHYTON, PHP, SQL...
		 	   	* VENTAJAS: MÁS COMPATIBLES
			   	* DESVENTAJAS: MÁS LENTOS

	- MAQ. VIRTUAL -> EL CÓDIGO FUENTE ES COMPILADO Y CONVERTIDO EN UN PSEUDO-LENGUAJE DE BYTECODE EL CUAL ES LEIDO INSTRUCCIÓN A INSTRUCCIÓN POR UN INTÉRPRETE
			  	* VENTAJAS: VELOCIDAD MEDIA
			  	* DESVENTAJAS: MISMA COMPATIBILIDAD QUE LOS INTERPRETADOS

									  - SEGÚN ABSTRACCIÓN:

	- BAJO NIVEL -> ENSAMBLADOR

	- NIVEL MEDIO -> C

	- ALTO NIVEL -> JAVA, C++, PYTHON, RUBY, PERL, PHP...

									  - SEGÚN PARADIGMA:

	- PROGRAMACIÓN ORIENTADA A OBJETOS 

	- PROGRAMACIÓN ESTRUCTURADA

	- PROGRAMACIÓN PROCEDIMENTAL

	- DECLARATIVO: SE ESPECIFICA LO QUE SE QUIERE, NO SE DAN ORDENES EXPLICITAS: SQL

		* LÓGICA 

		* FUNCIONAL: JAVA, PYTHON... 